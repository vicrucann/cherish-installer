#Ascii Scene 
#Version 130 
#Generator OpenSceneGraph 3.4.0 

entity::UserScene {
  UniqueID 1 
  Name "UserScene" 
Children 2 {
entity::Bookmarks {
      UniqueID 2 
      Name "groupBookmarks" 
}
    osg::Group {
      UniqueID 3 
      Name "groupCanvases" 
Children 14 {
entity::Canvas {
          UniqueID 4 
          Name "ground" 
Children 1 {
osg::MatrixTransform {
              UniqueID 5 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 6 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 7 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 8 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 9 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 10 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 11 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 12 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 13 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 14 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 15 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 16 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 17 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 18 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 1 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 19 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 20 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 2 FloatArray 16 {
                                    1 0 0 0 
                                    0 1 0 0 
                                    0 0 1 0 
                                    0 0 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 21 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 22 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 3 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 23 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 4 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 24 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 5 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 25 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 6 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 26 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 7 FloatArray 16 {
                                    -2.45689 0 0 0 
                                    0 0 -1.91431 -1 
                                    0 3.73205 0 0 
                                    0 0 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 27 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 28 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 8 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 29 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 9 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 30 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 10 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 31 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 32 
                        }
                        osg::Geode {
                          UniqueID 33 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 34 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 35 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 36 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 37 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 38 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 39 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 40 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 41 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 42 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 11 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 43 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 44 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 12 FloatArray 16 {
                                    1 0 0 0 
                                    0 1 0 0 
                                    0 0 1 0 
                                    0 0 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 45 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 46 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 13 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 47 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 14 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 48 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 15 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 49 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 16 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 50 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 17 FloatArray 16 {
                                    -2.45689 0 0 0 
                                    0 0 -1.91431 -1 
                                    0 3.73205 0 0 
                                    0 0 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 51 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 52 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 53 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 54 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 55 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 56 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 57 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 58 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 59 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 60 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 18 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 61 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 62 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 19 FloatArray 16 {
                                    1 0 0 0 
                                    0 1 0 0 
                                    0 0 1 0 
                                    0 0 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 63 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 64 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 20 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 65 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 21 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 66 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 22 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 67 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 23 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 68 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 24 FloatArray 16 {
                                    -2.45689 0 0 0 
                                    0 0 -1.91431 -1 
                                    0 3.73205 0 0 
                                    0 0 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 69 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 22 {
entity::LineSegment {
                              UniqueID 70 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 71 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 72 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.21618 0.0405076 0 
-1.20277 -0.938975 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 73 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 72 
                                }
                                osg::Vec4Array {
                                  UniqueID 73 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 71 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 74 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 75 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 76 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.20948 -0.953758 0 
-0.387032 -0.953758 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 77 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 76 
                                }
                                osg::Vec4Array {
                                  UniqueID 77 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 75 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 78 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 79 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 80 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.22617 0.0242135 0 
-0.915189 0.0285747 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 81 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 80 
                                }
                                osg::Vec4Array {
                                  UniqueID 81 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 79 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 82 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 83 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 84 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.0601184 -0.748496 0 
0.551753 -0.748496 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 85 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 84 
                                }
                                osg::Vec4Array {
                                  UniqueID 85 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 83 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 86 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 87 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 88 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.673939 -0.747422 0 
1.42366 -0.754701 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 89 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 88 
                                }
                                osg::Vec4Array {
                                  UniqueID 89 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 87 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 90 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 91 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 92 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.42126 -0.759922 0 
1.44168 0.758 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 93 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 92 
                                }
                                osg::Vec4Array {
                                  UniqueID 93 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 91 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 94 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 95 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 96 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.43914 0.753069 0 
0.715071 0.75042 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 97 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 96 
                                }
                                osg::Vec4Array {
                                  UniqueID 97 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 95 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 98 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 99 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 100 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.739508 0.75333 0 
0.739508 0.75333 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 101 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 100 
                                }
                                osg::Vec4Array {
                                  UniqueID 101 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 99 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 102 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 103 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 104 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.697784 0.747047 0 
0.697784 1.0669 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 105 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 104 
                                }
                                osg::Vec4Array {
                                  UniqueID 105 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 103 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 106 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 107 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 108 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.701596 1.06359 0 
-0.0448228 1.05667 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 109 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 108 
                                }
                                osg::Vec4Array {
                                  UniqueID 109 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 107 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 110 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 111 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 112 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.0429733 1.05796 0 
-0.0429733 0.915725 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 113 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 112 
                                }
                                osg::Vec4Array {
                                  UniqueID 113 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 111 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 114 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 115 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 116 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.0410124 0.916248 0 
-0.276907 0.915243 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 117 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 116 
                                }
                                osg::Vec4Array {
                                  UniqueID 117 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 115 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 118 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 119 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 120 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.274272 0.917766 0 
-0.467788 0.800274 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 121 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 120 
                                }
                                osg::Vec4Array {
                                  UniqueID 121 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 119 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 122 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 123 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 124 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.46816 0.804943 0 
-0.46816 0.567534 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 125 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 124 
                                }
                                osg::Vec4Array {
                                  UniqueID 125 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 123 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 126 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 127 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 128 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.467234 0.567969 0 
-0.921935 0.565482 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 129 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 128 
                                }
                                osg::Vec4Array {
                                  UniqueID 129 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 127 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 130 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 131 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 132 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.919201 0.0269268 0 
-0.919201 0.568507 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 133 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 132 
                                }
                                osg::Vec4Array {
                                  UniqueID 133 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 131 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 134 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 135 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 136 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.397755 -0.968338 0 
-0.387367 -0.43301 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 137 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 136 
                                }
                                osg::Vec4Array {
                                  UniqueID 137 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 135 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 138 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 139 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 140 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.387367 -0.43301 0 
-0.0436224 -0.432108 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 141 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 140 
                                }
                                osg::Vec4Array {
                                  UniqueID 141 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 139 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 142 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 143 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 144 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.0553225 -0.439646 0 
-0.0558391 -0.75282 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 145 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 144 
                                }
                                osg::Vec4Array {
                                  UniqueID 145 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 143 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 146 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 147 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 148 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.542793 -0.749644 0 
0.541712 -0.674557 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 149 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 148 
                                }
                                osg::Vec4Array {
                                  UniqueID 149 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 147 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 150 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 151 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 152 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.538739 -0.677675 0 
0.670996 -0.675804 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 153 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 152 
                                }
                                osg::Vec4Array {
                                  UniqueID 153 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 151 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 154 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 155 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 156 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.671949 -0.753592 0 
0.668003 -0.675915 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 157 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 156 
                                }
                                osg::Vec4Array {
                                  UniqueID 157 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 155 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
}
          }
Transform TRUE {
osg::MatrixTransform {
              UniqueID 5 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 6 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 7 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 8 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 32 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 33 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 52 
            }
          }
Normal 0 0 1 
}
        entity::Canvas {
          UniqueID 158 
          Name "garage" 
Children 1 {
osg::MatrixTransform {
              UniqueID 159 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 160 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 161 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 162 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 163 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 164 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 165 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 166 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 167 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 168 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 169 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 170 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 171 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 172 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 25 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 173 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 174 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 26 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.96498e-013 -0.950076 9.8307e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 175 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 176 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 27 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 177 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 28 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 178 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 29 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 179 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 30 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 180 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 31 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -4.82774e-013 3.66887e-013 2.89751 3.95008 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 181 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 182 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 32 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 183 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 33 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 184 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 34 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 185 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 186 
                        }
                        osg::Geode {
                          UniqueID 187 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 188 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 189 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 190 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 191 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 192 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 193 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 194 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 195 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 196 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 35 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 197 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 198 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 36 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.96498e-013 -0.950076 9.8307e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 199 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 200 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 37 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 201 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 38 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 202 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 39 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 203 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 40 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 204 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 41 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -4.82774e-013 3.66887e-013 2.89751 3.95008 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 205 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 206 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 207 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 208 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 209 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 210 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 211 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 212 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 213 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 214 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 42 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 215 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 216 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 43 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.96498e-013 -0.950076 9.8307e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 217 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 218 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 44 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 219 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 45 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 220 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 46 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 221 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 47 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 222 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 48 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -4.82774e-013 3.66887e-013 2.89751 3.95008 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 223 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 16 {
entity::LineSegment {
                              UniqueID 224 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 225 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 226 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.20655 -0.00484592 0 
1.20265 0.440658 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 227 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 226 
                                }
                                osg::Vec4Array {
                                  UniqueID 227 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 225 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 228 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 229 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 230 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.20265 0.440658 0 
1.26085 0.439323 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 231 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 230 
                                }
                                osg::Vec4Array {
                                  UniqueID 231 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 229 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 232 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 233 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 234 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.26085 0.439323 0 
1.26085 0.439323 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 235 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 234 
                                }
                                osg::Vec4Array {
                                  UniqueID 235 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 233 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 236 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 237 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 238 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.26332 0.436968 0 
1.26257 0.487325 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 239 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 238 
                                }
                                osg::Vec4Array {
                                  UniqueID 239 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 237 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 240 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 241 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 242 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.394827 -0.00551689 0 
0.394839 0.435323 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 243 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 242 
                                }
                                osg::Vec4Array {
                                  UniqueID 243 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 241 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 244 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 245 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 246 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.394839 0.435323 0 
0.394839 0.435323 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 247 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 246 
                                }
                                osg::Vec4Array {
                                  UniqueID 247 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 245 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 248 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 249 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 250 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.397197 0.433008 0 
0.343309 0.432015 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 251 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 250 
                                }
                                osg::Vec4Array {
                                  UniqueID 251 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 249 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 252 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 253 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 254 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.343309 0.432015 0 
0.345447 0.474453 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 255 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 254 
                                }
                                osg::Vec4Array {
                                  UniqueID 255 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 253 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 256 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 257 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 258 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.345459 0.472099 0 
0.472128 0.472173 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 259 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 258 
                                }
                                osg::Vec4Array {
                                  UniqueID 259 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 257 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 260 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 261 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 262 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.474495 0.469857 0 
0.477199 0.413212 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 263 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 262 
                                }
                                osg::Vec4Array {
                                  UniqueID 263 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 261 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 264 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 265 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 266 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.474846 0.41317 0 
1.1014 0.422058 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 267 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 266 
                                }
                                osg::Vec4Array {
                                  UniqueID 267 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 265 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 268 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 269 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 270 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.10146 0.417273 0 
1.103 0.484266 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 271 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 270 
                                }
                                osg::Vec4Array {
                                  UniqueID 271 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 269 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 272 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 273 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 274 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.10056 0.486609 0 
1.26506 0.482578 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 275 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 274 
                                }
                                osg::Vec4Array {
                                  UniqueID 275 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 273 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 276 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 277 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 278 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.05613 -0.00388139 0 
1.05604 0.387759 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 279 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 278 
                                }
                                osg::Vec4Array {
                                  UniqueID 279 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 277 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 280 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 281 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 282 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.06095 0.380665 0 
0.524582 0.373825 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 283 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 282 
                                }
                                osg::Vec4Array {
                                  UniqueID 283 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 281 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 284 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 285 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 286 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.529332 0.36917 0 
0.529499 -0.00420115 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 287 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 286 
                                }
                                osg::Vec4Array {
                                  UniqueID 287 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 285 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 -2.06823e-013 0 0 
                -2.14006e-026 1.03473e-013 1 0 
                -2.06823e-013 1 -1.03473e-013 0 
                1.96498e-013 -0.950076 9.8307e-014 1 
              }
              
}
          }
MatrixRotation {
            -1 -2.06823e-013 0 0 
            -2.14006e-026 1.03473e-013 1 0 
            -2.06823e-013 1 -1.03473e-013 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.96498e-013 -0.950076 9.8307e-014 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 159 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 160 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 161 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 162 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 186 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 187 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 206 
            }
          }
Center 1.96498e-013 -0.950076 9.8307e-014 
Normal -2.06823e-013 1 -1.03473e-013 
}
        entity::Canvas {
          UniqueID 288 
          Name "right" 
Children 1 {
osg::MatrixTransform {
              UniqueID 289 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 290 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 291 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 292 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 293 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 294 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 295 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 296 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 297 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 298 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 299 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 300 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 301 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 302 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 49 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 303 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 304 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 50 FloatArray 16 {
                                    -1.03473e-013 1 1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    1 1.03473e-013 1.07066e-026 0 
                                    1.44556 1.49577e-013 1.54771e-026 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 305 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 306 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 51 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 307 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 52 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 308 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 53 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 309 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 54 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 310 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 55 FloatArray 16 {
                                    2.54222e-013 3.86166e-013 -1.91431 -1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    -2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    -3.55158 5.77613e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 311 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 312 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 56 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 313 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 57 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 314 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 58 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 315 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 316 
                        }
                        osg::Geode {
                          UniqueID 317 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 318 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 319 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 320 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 321 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 322 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 323 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 324 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 325 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 326 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 59 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 327 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 328 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 60 FloatArray 16 {
                                    -1.03473e-013 1 1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    1 1.03473e-013 1.07066e-026 0 
                                    1.44556 1.49577e-013 1.54771e-026 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 329 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 330 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 61 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 331 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 62 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 332 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 63 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 333 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 64 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 334 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 65 FloatArray 16 {
                                    2.54222e-013 3.86166e-013 -1.91431 -1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    -2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    -3.55158 5.77613e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 335 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 336 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 337 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 338 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 339 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 340 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 341 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 342 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 343 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 344 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 66 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 345 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 346 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 67 FloatArray 16 {
                                    -1.03473e-013 1 1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    1 1.03473e-013 1.07066e-026 0 
                                    1.44556 1.49577e-013 1.54771e-026 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 347 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 348 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 68 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 349 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 69 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 350 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 70 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 351 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 71 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 352 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 72 FloatArray 16 {
                                    2.54222e-013 3.86166e-013 -1.91431 -1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    -2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    -3.55158 5.77613e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 353 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1.03473e-013 1 1.03473e-013 0 
                0 -1.03473e-013 1 0 
                1 1.03473e-013 1.07066e-026 0 
                1.44556 1.49577e-013 1.54771e-026 1 
              }
              
}
          }
MatrixRotation {
            -1.03473e-013 1 1.03473e-013 0 
            0 -1.03473e-013 1 0 
            1 1.03473e-013 1.07066e-026 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.44556 1.49577e-013 1.54771e-026 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 289 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 290 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 291 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 292 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 316 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 317 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 336 
            }
          }
Center 1.44556 1.49577e-013 1.54771e-026 
Normal 1 1.03473e-013 1.07066e-026 
}
        entity::Canvas {
          UniqueID 354 
          Name "left" 
Children 1 {
osg::MatrixTransform {
              UniqueID 355 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 356 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 357 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 358 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 359 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 360 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 361 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 362 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 363 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 364 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 365 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 366 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 367 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 368 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 73 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 369 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 370 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 74 FloatArray 16 {
                                    -1.03473e-013 -1 -1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    -1 1.03473e-013 1.07066e-026 0 
                                    -1.22075 1.26315e-013 1.30701e-026 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 371 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 372 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 75 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 373 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 76 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 374 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 77 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 375 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 78 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 376 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 79 FloatArray 16 {
                                    2.54222e-013 -3.86166e-013 1.91431 1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    2.99925 4.87783e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 377 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 378 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 80 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 379 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 81 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 380 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 82 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 381 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 382 
                        }
                        osg::Geode {
                          UniqueID 383 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 384 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 385 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 386 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 387 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 388 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 389 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 390 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 391 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 392 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 83 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 393 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 394 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 84 FloatArray 16 {
                                    -1.03473e-013 -1 -1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    -1 1.03473e-013 1.07066e-026 0 
                                    -1.22075 1.26315e-013 1.30701e-026 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 395 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 396 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 85 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 397 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 86 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 398 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 87 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 399 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 88 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 400 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 89 FloatArray 16 {
                                    2.54222e-013 -3.86166e-013 1.91431 1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    2.99925 4.87783e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 401 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 402 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 403 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 404 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 405 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 406 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 407 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 408 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 409 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 410 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 90 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 411 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 412 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 91 FloatArray 16 {
                                    -1.03473e-013 -1 -1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    -1 1.03473e-013 1.07066e-026 0 
                                    -1.22075 1.26315e-013 1.30701e-026 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 413 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 414 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 92 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 415 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 93 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 416 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 94 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 417 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 95 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 418 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 96 FloatArray 16 {
                                    2.54222e-013 -3.86166e-013 1.91431 1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    2.99925 4.87783e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 419 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1.03473e-013 -1 -1.03473e-013 0 
                0 -1.03473e-013 1 0 
                -1 1.03473e-013 1.07066e-026 0 
                -1.22075 1.26315e-013 1.30701e-026 1 
              }
              
}
          }
MatrixRotation {
            -1.03473e-013 -1 -1.03473e-013 0 
            0 -1.03473e-013 1 0 
            -1 1.03473e-013 1.07066e-026 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            -1.22075 1.26315e-013 1.30701e-026 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 355 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 356 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 357 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 358 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 382 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 383 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 402 
            }
          }
Center -1.22075 1.26315e-013 1.30701e-026 
Normal -1 1.03473e-013 1.07066e-026 
}
        entity::Canvas {
          UniqueID 420 
          Name "side of garage" 
Children 1 {
osg::MatrixTransform {
              UniqueID 421 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 422 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 423 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 424 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 425 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 426 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 427 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 428 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 429 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 430 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 431 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 432 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 433 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 434 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 97 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 435 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 436 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 98 FloatArray 16 {
                                    -1.03473e-013 1 1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    1 1.03473e-013 1.07066e-026 0 
                                    -0.390476 -4.04036e-014 -4.18068e-027 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 437 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 438 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 99 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 439 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 100 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 440 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 101 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 441 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 102 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 442 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 103 FloatArray 16 {
                                    2.54222e-013 3.86166e-013 -1.91431 -1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    -2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    0.959356 -1.56025e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 443 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 444 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 104 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 445 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 105 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 446 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 106 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 447 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 448 
                        }
                        osg::Geode {
                          UniqueID 449 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 450 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 451 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 452 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 453 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 454 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 455 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 456 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 457 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 458 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 107 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 459 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 460 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 108 FloatArray 16 {
                                    -1.03473e-013 1 1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    1 1.03473e-013 1.07066e-026 0 
                                    -0.390476 -4.04036e-014 -4.18068e-027 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 461 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 462 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 109 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 463 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 110 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 464 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 111 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 465 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 112 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 466 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 113 FloatArray 16 {
                                    2.54222e-013 3.86166e-013 -1.91431 -1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    -2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    0.959356 -1.56025e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 467 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 468 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 469 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 470 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 471 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 472 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 473 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 474 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 475 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 476 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 114 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 477 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 478 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 115 FloatArray 16 {
                                    -1.03473e-013 1 1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    1 1.03473e-013 1.07066e-026 0 
                                    -0.390476 -4.04036e-014 -4.18068e-027 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 479 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 480 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 116 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 481 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 117 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 482 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 118 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 483 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 119 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 484 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 120 FloatArray 16 {
                                    2.54222e-013 3.86166e-013 -1.91431 -1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    -2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    0.959356 -1.56025e-026 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 485 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 3 {
entity::LineSegment {
                              UniqueID 486 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 487 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 488 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.643657 0.458001 0 
-0.643657 0.458001 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 489 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 488 
                                }
                                osg::Vec4Array {
                                  UniqueID 489 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 487 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 490 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 491 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 492 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.646556 0.44124 0 
-0.646106 0.00687002 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 493 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 492 
                                }
                                osg::Vec4Array {
                                  UniqueID 493 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 491 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 494 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 495 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 496 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.958867 0.436943 0 
-0.646051 0.442028 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 497 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 496 
                                }
                                osg::Vec4Array {
                                  UniqueID 497 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 495 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1.03473e-013 1 1.03473e-013 0 
                0 -1.03473e-013 1 0 
                1 1.03473e-013 1.07066e-026 0 
                -0.390476 -4.04036e-014 -4.18068e-027 1 
              }
              
}
          }
MatrixRotation {
            -1.03473e-013 1 1.03473e-013 0 
            0 -1.03473e-013 1 0 
            1 1.03473e-013 1.07066e-026 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            -0.390476 -4.04036e-014 -4.18068e-027 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 421 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 422 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 423 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 424 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 448 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 449 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 468 
            }
          }
Center -0.390476 -4.04036e-014 -4.18068e-027 
Normal 1 1.03473e-013 1.07066e-026 
}
        entity::Canvas {
          UniqueID 498 
          Name "front back" 
Children 1 {
osg::MatrixTransform {
              UniqueID 499 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 500 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 501 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 502 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 503 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 504 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 505 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 506 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 507 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 508 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 509 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 510 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 511 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 512 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 121 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 513 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 514 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 122 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.32663e-013 -0.641434 6.6371e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 515 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 516 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 123 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 517 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 124 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 518 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 125 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 519 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 126 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 520 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 127 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.25938e-013 2.477e-013 2.30667 3.64143 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 521 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 522 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 128 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 523 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 129 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 524 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 130 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 525 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 526 
                        }
                        osg::Geode {
                          UniqueID 527 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 528 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 529 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 530 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 531 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 532 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 533 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 534 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 535 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 536 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 131 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 537 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 538 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 132 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.32663e-013 -0.641434 6.6371e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 539 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 540 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 133 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 541 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 134 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 542 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 135 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 543 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 136 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 544 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 137 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.25938e-013 2.477e-013 2.30667 3.64143 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 545 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 546 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 547 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 548 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 549 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 550 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 551 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 552 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 553 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 554 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 138 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 555 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 556 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 139 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.32663e-013 -0.641434 6.6371e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 557 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 558 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 140 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 559 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 141 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 560 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 142 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 561 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 143 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 562 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 144 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.25938e-013 2.477e-013 2.30667 3.64143 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 563 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 -2.06823e-013 0 0 
                -2.14006e-026 1.03473e-013 1 0 
                -2.06823e-013 1 -1.03473e-013 0 
                1.32663e-013 -0.641434 6.6371e-014 1 
              }
              
}
          }
MatrixRotation {
            -1 -2.06823e-013 0 0 
            -2.14006e-026 1.03473e-013 1 0 
            -2.06823e-013 1 -1.03473e-013 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.32663e-013 -0.641434 6.6371e-014 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 499 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 500 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 501 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 502 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 526 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 527 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 546 
            }
          }
Center 1.32663e-013 -0.641434 6.6371e-014 
Normal -2.06823e-013 1 -1.03473e-013 
}
        entity::Canvas {
          UniqueID 564 
          Name "front window door" 
Children 1 {
osg::MatrixTransform {
              UniqueID 565 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 566 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 567 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 568 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 569 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 570 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 571 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 572 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 573 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 574 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 575 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 576 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 577 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 578 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 145 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 579 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 580 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 146 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.55869e-013 -0.753635 7.79807e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 581 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 582 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 147 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 583 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 148 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 584 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 149 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 585 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 150 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 586 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 151 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.82953e-013 2.91028e-013 2.52146 3.75363 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 587 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 588 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 152 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 589 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 153 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 590 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 154 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 591 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 592 
                        }
                        osg::Geode {
                          UniqueID 593 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 594 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 595 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 596 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 597 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 598 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 599 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 600 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 601 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 602 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 155 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 603 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 604 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 156 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.55869e-013 -0.753635 7.79807e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 605 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 606 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 157 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 607 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 158 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 608 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 159 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 609 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 160 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 610 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 161 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.82953e-013 2.91028e-013 2.52146 3.75363 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 611 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 612 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 613 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 614 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 615 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 616 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 617 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 618 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 619 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 620 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 162 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 621 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 622 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 163 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.55869e-013 -0.753635 7.79807e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 623 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 624 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 164 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 625 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 165 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 626 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 166 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 627 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 167 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 628 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 168 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.82953e-013 2.91028e-013 2.52146 3.75363 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 629 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 22 {
entity::LineSegment {
                              UniqueID 630 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 631 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 632 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.0569207 -0.00310856 0 
0.059161 0.792849 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 633 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 632 
                                }
                                osg::Vec4Array {
                                  UniqueID 633 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 631 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 634 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 635 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 636 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.542134 0.781469 0 
-0.545059 -0.00713784 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 637 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 636 
                                }
                                osg::Vec4Array {
                                  UniqueID 637 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 635 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 638 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 639 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 640 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.67707 -0.00581624 0 
-0.670726 0.390348 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 641 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 640 
                                }
                                osg::Vec4Array {
                                  UniqueID 641 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 639 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 642 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 643 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 644 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.40544 0.380159 0 
-1.41478 -0.00383247 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 645 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 644 
                                }
                                osg::Vec4Array {
                                  UniqueID 645 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 643 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 646 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 647 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 648 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.0807313 -0.00781989 0 
-0.0783994 0.787797 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 649 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 648 
                                }
                                osg::Vec4Array {
                                  UniqueID 649 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 647 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 650 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 651 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 652 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.927624 0.378861 0 
-0.933166 0.0805215 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 653 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 652 
                                }
                                osg::Vec4Array {
                                  UniqueID 653 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 651 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 654 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 655 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 656 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.929349 0.0844301 0 
-1.18751 0.0830646 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 657 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 656 
                                }
                                osg::Vec4Array {
                                  UniqueID 657 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 655 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 658 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 659 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 660 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.18751 0.0830646 0 
-1.18856 0.373657 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 661 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 660 
                                }
                                osg::Vec4Array {
                                  UniqueID 661 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 659 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 662 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 663 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 664 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.128971 0.737359 0 
-0.128971 0.737359 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 665 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 664 
                                }
                                osg::Vec4Array {
                                  UniqueID 665 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 663 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 666 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 667 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 668 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.125008 0.741246 0 
-0.345487 0.738319 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 669 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 668 
                                }
                                osg::Vec4Array {
                                  UniqueID 669 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 667 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 670 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 671 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 672 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.337682 0.734392 0 
-0.339368 0.577816 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 673 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 672 
                                }
                                osg::Vec4Array {
                                  UniqueID 673 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 671 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 674 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 675 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 676 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.339368 0.577816 0 
-0.133491 0.576376 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 677 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 676 
                                }
                                osg::Vec4Array {
                                  UniqueID 677 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 675 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 678 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 679 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 680 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.133491 0.576376 0 
-0.136885 0.733489 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 681 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 680 
                                }
                                osg::Vec4Array {
                                  UniqueID 681 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 679 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 682 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 683 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 684 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.132015 0.0408556 0 
-0.136395 0.376011 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 685 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 684 
                                }
                                osg::Vec4Array {
                                  UniqueID 685 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 683 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 686 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 687 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 688 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.12835 0.379909 0 
-0.332056 0.378468 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 689 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 688 
                                }
                                osg::Vec4Array {
                                  UniqueID 689 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 687 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 690 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 691 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 692 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.332056 0.378468 0 
-0.329592 0.0398895 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 693 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 692 
                                }
                                osg::Vec4Array {
                                  UniqueID 693 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 691 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 694 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 695 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 696 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.325568 0.0398262 0 
-0.12802 0.036717 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 697 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 696 
                                }
                                osg::Vec4Array {
                                  UniqueID 697 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 695 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 698 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 699 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 700 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.233896 0.736415 0 
-0.2362 0.579506 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 701 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 700 
                                }
                                osg::Vec4Array {
                                  UniqueID 701 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 699 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 702 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 703 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 704 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.231743 0.375034 0 
-0.229083 0.0424241 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 705 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 704 
                                }
                                osg::Vec4Array {
                                  UniqueID 705 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 703 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 706 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 707 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 708 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.399351 -0.00191839 0 
-0.395467 0.783431 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 709 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 708 
                                }
                                osg::Vec4Array {
                                  UniqueID 709 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 707 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 710 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 711 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 712 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.48272 0.376054 0 
-0.480318 0.394465 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 713 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 712 
                                }
                                osg::Vec4Array {
                                  UniqueID 713 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 711 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 714 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 715 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 716 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.476973 0.3874 0 
-0.543673 0.492833 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 717 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 716 
                                }
                                osg::Vec4Array {
                                  UniqueID 717 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 715 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 -2.06823e-013 0 0 
                -2.14006e-026 1.03473e-013 1 0 
                -2.06823e-013 1 -1.03473e-013 0 
                1.55869e-013 -0.753635 7.79807e-014 1 
              }
              
}
          }
MatrixRotation {
            -1 -2.06823e-013 0 0 
            -2.14006e-026 1.03473e-013 1 0 
            -2.06823e-013 1 -1.03473e-013 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.55869e-013 -0.753635 7.79807e-014 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 565 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 566 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 567 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 568 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 592 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 593 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 612 
            }
          }
Center 1.55869e-013 -0.753635 7.79807e-014 
Normal -2.06823e-013 1 -1.03473e-013 
}
        entity::Canvas {
          UniqueID 718 
          Name "front roof garage" 
Children 1 {
osg::MatrixTransform {
              UniqueID 719 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 720 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 721 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 722 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 723 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 724 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 725 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 726 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 727 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 728 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 729 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 730 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 731 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 732 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 169 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 733 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 734 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 170 FloatArray 16 {
                                    -1 1.02588e-013 -7.08767e-016 0 
                                    -5.54952e-014 -0.546737 -0.837304 0 
                                    -8.6285e-014 -0.837304 0.546737 0 
                                    1.74279e-013 -1.17259 0.143796 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 735 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 736 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 171 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 737 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 172 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 738 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 173 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 739 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 174 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 740 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 175 FloatArray 16 {
                                    2.45689 -2.64515e-015 -1.96386e-013 -1.02588e-013 
                                    1.36346e-013 -3.12486 1.04663 0.546737 
                                    2.11993e-013 2.04045 1.60286 0.837304 
                                    -4.28184e-013 0.536654 3.32347 4.17259 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 741 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 742 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 176 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 743 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 177 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 744 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 178 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 745 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 746 
                        }
                        osg::Geode {
                          UniqueID 747 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 748 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 749 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 750 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 751 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 752 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 753 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 754 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 755 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 756 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 179 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 757 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 758 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 180 FloatArray 16 {
                                    -1 1.02588e-013 -7.08767e-016 0 
                                    -5.54952e-014 -0.546737 -0.837304 0 
                                    -8.6285e-014 -0.837304 0.546737 0 
                                    1.74279e-013 -1.17259 0.143796 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 759 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 760 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 181 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 761 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 182 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 762 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 183 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 763 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 184 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 764 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 185 FloatArray 16 {
                                    2.45689 -2.64515e-015 -1.96386e-013 -1.02588e-013 
                                    1.36346e-013 -3.12486 1.04663 0.546737 
                                    2.11993e-013 2.04045 1.60286 0.837304 
                                    -4.28184e-013 0.536654 3.32347 4.17259 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 765 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 766 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 767 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 768 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 769 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 770 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 771 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 772 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 773 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 774 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 186 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 775 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 776 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 187 FloatArray 16 {
                                    -1 1.02588e-013 -7.08767e-016 0 
                                    -5.54952e-014 -0.546737 -0.837304 0 
                                    -8.6285e-014 -0.837304 0.546737 0 
                                    1.74279e-013 -1.17259 0.143796 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 777 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 778 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 188 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 779 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 189 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 780 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 190 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 781 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 191 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 782 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 192 FloatArray 16 {
                                    2.45689 -2.64515e-015 -1.96386e-013 -1.02588e-013 
                                    1.36346e-013 -3.12486 1.04663 0.546737 
                                    2.11993e-013 2.04045 1.60286 0.837304 
                                    -4.28184e-013 0.536654 3.32347 4.17259 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 783 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 2 {
entity::LineSegment {
                              UniqueID 784 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 785 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 786 
                                  Binding BIND_PER_VERTEX 
vector 2 {
1.27307 -0.399127 0 
0.809572 -1.06866 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 787 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 786 
                                }
                                osg::Vec4Array {
                                  UniqueID 787 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 785 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 788 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 789 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 790 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.818886 -1.05877 0 
0.340388 -0.391299 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 791 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 790 
                                }
                                osg::Vec4Array {
                                  UniqueID 791 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 789 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 1.02588e-013 -7.08767e-016 0 
                -5.54952e-014 -0.546737 -0.837304 0 
                -8.6285e-014 -0.837304 0.546737 0 
                1.74279e-013 -1.17259 0.143796 1 
              }
              
}
          }
MatrixRotation {
            -1 1.02588e-013 -7.08767e-016 0 
            -5.54952e-014 -0.546737 -0.837304 0 
            -8.6285e-014 -0.837304 0.546737 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.74279e-013 -1.17259 0.143796 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 719 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 720 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 721 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 722 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 746 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 747 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 766 
            }
          }
Center 1.74279e-013 -1.17259 0.143796 
Normal -8.6285e-014 -0.837304 0.546737 
}
        entity::Canvas {
          UniqueID 792 
          Name "Roof garage right side" 
Children 1 {
osg::MatrixTransform {
              UniqueID 793 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 794 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 795 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 796 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 797 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 798 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 799 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 800 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 801 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 802 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 803 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 804 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 805 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 806 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 193 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 807 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 808 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 194 FloatArray 16 {
                                    -4.7448e-008 1 3.99685e-008 0 
                                    -0.64239 -6.11111e-008 0.766378 0 
                                    0.766378 1.06877e-008 0.64239 0 
                                    -0.448859 -0.56913 0.610027 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 809 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 810 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 195 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 811 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 196 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 812 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 197 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 813 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 198 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 814 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 199 FloatArray 16 {
                                    1.16574e-007 1.49164e-007 -1.91431 -1 
                                    1.57828 2.86016 1.16986e-007 6.11111e-008 
                                    -1.88291 2.39743 -2.04596e-008 -1.06877e-008 
                                    1.1028 2.27665 2.16826 3.56913 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 815 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 816 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 200 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 817 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 201 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 818 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 202 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 819 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 820 
                        }
                        osg::Geode {
                          UniqueID 821 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 822 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 823 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 824 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 825 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 826 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 827 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 828 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 829 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 830 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 203 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 831 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 832 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 204 FloatArray 16 {
                                    -4.7448e-008 1 3.99685e-008 0 
                                    -0.64239 -6.11111e-008 0.766378 0 
                                    0.766378 1.06877e-008 0.64239 0 
                                    -0.448859 -0.56913 0.610027 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 833 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 834 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 205 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 835 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 206 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 836 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 207 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 837 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 208 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 838 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 209 FloatArray 16 {
                                    1.16574e-007 1.49164e-007 -1.91431 -1 
                                    1.57828 2.86016 1.16986e-007 6.11111e-008 
                                    -1.88291 2.39743 -2.04596e-008 -1.06877e-008 
                                    1.1028 2.27665 2.16826 3.56913 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 839 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 840 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 841 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 842 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 843 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 844 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 845 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 846 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 847 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 848 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 210 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 849 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 850 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 211 FloatArray 16 {
                                    -4.7448e-008 1 3.99685e-008 0 
                                    -0.64239 -6.11111e-008 0.766378 0 
                                    0.766378 1.06877e-008 0.64239 0 
                                    -0.448859 -0.56913 0.610027 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 851 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 852 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 212 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 853 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 213 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 854 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 214 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 855 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 215 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 856 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 216 FloatArray 16 {
                                    1.16574e-007 1.49164e-007 -1.91431 -1 
                                    1.57828 2.86016 1.16986e-007 6.11111e-008 
                                    -1.88291 2.39743 -2.04596e-008 -1.06877e-008 
                                    1.1028 2.27665 2.16826 3.56913 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 857 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 4 {
entity::LineSegment {
                              UniqueID 858 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 859 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 860 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.0316288 0.551544 0 
0.429994 0.554429 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 861 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 860 
                                }
                                osg::Vec4Array {
                                  UniqueID 861 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 859 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 862 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 863 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 864 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.157209 -0.162077 0 
-0.390531 -0.181693 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 865 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 864 
                                }
                                osg::Vec4Array {
                                  UniqueID 865 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 863 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 866 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 867 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 868 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.126156 -0.167689 0 
0.129626 0.196794 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 869 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 868 
                                }
                                osg::Vec4Array {
                                  UniqueID 869 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 867 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 870 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 871 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 872 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.129626 0.196794 0 
0.271215 0.535946 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 873 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 872 
                                }
                                osg::Vec4Array {
                                  UniqueID 873 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 871 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -4.7448e-008 1 3.99685e-008 0 
                -0.64239 -6.11111e-008 0.766378 0 
                0.766378 1.06877e-008 0.64239 0 
                -0.448859 -0.56913 0.610027 1 
              }
              
}
          }
MatrixRotation {
            -4.7448e-008 1 3.99685e-008 0 
            -0.64239 -6.11111e-008 0.766378 0 
            0.766378 1.06877e-008 0.64239 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            -0.448859 -0.56913 0.610027 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 793 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 794 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 795 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 796 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 820 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 821 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 840 
            }
          }
Center -0.448859 -0.56913 0.610027 
Normal 0.766378 1.06877e-008 0.64239 
}
        entity::Canvas {
          UniqueID 874 
          Name "front roof windows " 
Children 1 {
osg::MatrixTransform {
              UniqueID 875 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 876 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 877 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 878 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 879 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 880 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 881 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 882 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 883 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 884 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 885 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 886 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 887 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 888 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 217 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 889 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 890 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 218 FloatArray 16 {
                                    -1 6.06059e-017 -5.68687e-014 0 
                                    5.00181e-014 -0.474894 -0.880043 0 
                                    -2.70599e-014 -0.880043 0.474894 0 
                                    1.44069e-013 -1.07856 0.179448 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 891 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 892 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 219 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 893 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 220 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 894 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 221 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 895 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 222 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 896 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 223 FloatArray 16 {
                                    2.45689 -2.12237e-013 -1.16019e-016 -6.06059e-017 
                                    -1.22889e-013 -3.28437 0.909096 0.474894 
                                    6.64832e-014 1.77233 1.68468 0.880043 
                                    -3.53962e-013 0.669709 3.14347 4.07856 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 897 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 898 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 224 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 899 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 225 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 900 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 226 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 901 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 902 
                        }
                        osg::Geode {
                          UniqueID 903 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 904 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 905 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 906 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 907 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 908 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 909 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 910 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 911 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 912 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 227 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 913 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 914 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 228 FloatArray 16 {
                                    -1 6.06059e-017 -5.68687e-014 0 
                                    5.00181e-014 -0.474894 -0.880043 0 
                                    -2.70599e-014 -0.880043 0.474894 0 
                                    1.44069e-013 -1.07856 0.179448 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 915 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 916 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 229 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 917 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 230 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 918 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 231 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 919 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 232 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 920 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 233 FloatArray 16 {
                                    2.45689 -2.12237e-013 -1.16019e-016 -6.06059e-017 
                                    -1.22889e-013 -3.28437 0.909096 0.474894 
                                    6.64832e-014 1.77233 1.68468 0.880043 
                                    -3.53962e-013 0.669709 3.14347 4.07856 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 921 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 922 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 923 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 924 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 925 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 926 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 927 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 928 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 929 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 930 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 234 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 931 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 932 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 235 FloatArray 16 {
                                    -1 6.06059e-017 -5.68687e-014 0 
                                    5.00181e-014 -0.474894 -0.880043 0 
                                    -2.70599e-014 -0.880043 0.474894 0 
                                    1.44069e-013 -1.07856 0.179448 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 933 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 934 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 236 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 935 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 237 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 936 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 238 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 937 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 239 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 938 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 240 FloatArray 16 {
                                    2.45689 -2.12237e-013 -1.16019e-016 -6.06059e-017 
                                    -1.22889e-013 -3.28437 0.909096 0.474894 
                                    6.64832e-014 1.77233 1.68468 0.880043 
                                    -3.53962e-013 0.669709 3.14347 4.07856 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 939 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 4 {
entity::LineSegment {
                              UniqueID 940 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 941 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 942 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.628005 -0.9744 0 
-0.628005 -0.9744 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 943 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 942 
                                }
                                osg::Vec4Array {
                                  UniqueID 943 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 941 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 944 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 945 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 946 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.151479 -0.690293 0 
-0.633648 -0.67952 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 947 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 946 
                                }
                                osg::Vec4Array {
                                  UniqueID 947 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 945 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 948 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 949 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 950 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.619913 -0.684311 0 
-0.234219 -1.13371 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 951 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 950 
                                }
                                osg::Vec4Array {
                                  UniqueID 951 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 949 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 952 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 953 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 954 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.234219 -1.13371 0 
0.148501 -0.689493 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 955 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 954 
                                }
                                osg::Vec4Array {
                                  UniqueID 955 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 953 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 6.06059e-017 -5.68687e-014 0 
                5.00181e-014 -0.474894 -0.880043 0 
                -2.70599e-014 -0.880043 0.474894 0 
                1.44069e-013 -1.07856 0.179448 1 
              }
              
}
          }
MatrixRotation {
            -1 6.06059e-017 -5.68687e-014 0 
            5.00181e-014 -0.474894 -0.880043 0 
            -2.70599e-014 -0.880043 0.474894 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.44069e-013 -1.07856 0.179448 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 875 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 876 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 877 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 878 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 902 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 903 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 922 
            }
          }
Center 1.44069e-013 -1.07856 0.179448 
Normal -2.70599e-014 -0.880043 0.474894 
}
        entity::Canvas {
          UniqueID 956 
          Name "roof big window front" 
Children 1 {
osg::MatrixTransform {
              UniqueID 957 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 958 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 959 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 960 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 961 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 962 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 963 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 964 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 965 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 966 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 967 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 968 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 969 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 970 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 241 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 971 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 972 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 242 FloatArray 16 {
                                    -1 1.16731e-015 2.08214e-013 0 
                                    1.78268e-013 0.521492 0.853256 0 
                                    -1.07586e-013 0.853256 -0.521492 0 
                                    1.76983e-013 -0.921864 0.10356 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 973 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 974 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 243 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 975 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 244 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 976 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 245 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 977 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 246 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 978 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 247 FloatArray 16 {
                                    2.45689 7.77065e-013 -2.2346e-015 -1.16731e-015 
                                    -4.37985e-013 3.18439 -0.998299 -0.521492 
                                    2.64327e-013 -1.94623 -1.6334 -0.853256 
                                    -4.34828e-013 0.386491 2.8435 3.92186 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 979 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 980 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 248 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 981 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 249 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 982 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 250 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 983 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 984 
                        }
                        osg::Geode {
                          UniqueID 985 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 986 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 987 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 988 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 989 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 990 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 991 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 992 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 993 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 994 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 251 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 995 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 996 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 252 FloatArray 16 {
                                    -1 1.16731e-015 2.08214e-013 0 
                                    1.78268e-013 0.521492 0.853256 0 
                                    -1.07586e-013 0.853256 -0.521492 0 
                                    1.76983e-013 -0.921864 0.10356 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 997 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 998 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 253 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 999 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 254 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1000 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 255 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1001 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 256 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1002 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 257 FloatArray 16 {
                                    2.45689 7.77065e-013 -2.2346e-015 -1.16731e-015 
                                    -4.37985e-013 3.18439 -0.998299 -0.521492 
                                    2.64327e-013 -1.94623 -1.6334 -0.853256 
                                    -4.34828e-013 0.386491 2.8435 3.92186 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1003 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 1004 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1005 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 1006 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1007 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1008 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 1009 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1010 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1011 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 1012 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 258 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1013 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1014 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 259 FloatArray 16 {
                                    -1 1.16731e-015 2.08214e-013 0 
                                    1.78268e-013 0.521492 0.853256 0 
                                    -1.07586e-013 0.853256 -0.521492 0 
                                    1.76983e-013 -0.921864 0.10356 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1015 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1016 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 260 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1017 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 261 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1018 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 262 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1019 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 263 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1020 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 264 FloatArray 16 {
                                    2.45689 7.77065e-013 -2.2346e-015 -1.16731e-015 
                                    -4.37985e-013 3.18439 -0.998299 -0.521492 
                                    2.64327e-013 -1.94623 -1.6334 -0.853256 
                                    -4.34828e-013 0.386491 2.8435 3.92186 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1021 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 2 {
entity::LineSegment {
                              UniqueID 1022 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1023 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1024 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.49097 0.320144 0 
-1.26043 0.967509 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1025 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1024 
                                }
                                osg::Vec4Array {
                                  UniqueID 1025 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1023 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1026 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1027 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1028 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-1.26043 0.967509 0 
-0.403837 0.967613 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1029 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1028 
                                }
                                osg::Vec4Array {
                                  UniqueID 1029 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1027 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 1.16731e-015 2.08214e-013 0 
                1.78268e-013 0.521492 0.853256 0 
                -1.07586e-013 0.853256 -0.521492 0 
                1.76983e-013 -0.921864 0.10356 1 
              }
              
}
          }
MatrixRotation {
            -1 1.16731e-015 2.08214e-013 0 
            1.78268e-013 0.521492 0.853256 0 
            -1.07586e-013 0.853256 -0.521492 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.76983e-013 -0.921864 0.10356 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 957 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 958 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 959 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 960 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 984 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 985 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 1004 
            }
          }
Center 1.76983e-013 -0.921864 0.10356 
Normal -1.07586e-013 0.853256 -0.521492 
}
        entity::Canvas {
          UniqueID 1030 
          Name "door" 
Children 1 {
osg::MatrixTransform {
              UniqueID 1031 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 1032 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 1033 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 1034 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1035 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 1036 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 1037 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1038 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1039 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 1040 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1041 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1042 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1043 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 1044 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 265 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1045 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1046 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 266 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.43703e-013 -0.69481 7.18939e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1047 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1048 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 267 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1049 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 268 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1050 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 269 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1051 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 270 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1052 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 271 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.53062e-013 2.68312e-013 2.40885 3.69481 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1053 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1054 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 272 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1055 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 273 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1056 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 274 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1057 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 1058 
                        }
                        osg::Geode {
                          UniqueID 1059 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1060 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 1061 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 1062 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1063 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1064 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 1065 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1066 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1067 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 1068 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 275 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1069 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1070 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 276 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.43703e-013 -0.69481 7.18939e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1071 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1072 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 277 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1073 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 278 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1074 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 279 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1075 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 280 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1076 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 281 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.53062e-013 2.68312e-013 2.40885 3.69481 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1077 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 1078 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1079 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 1080 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1081 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1082 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 1083 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1084 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1085 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 1086 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 282 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1087 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1088 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 283 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    1.43703e-013 -0.69481 7.18939e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1089 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1090 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 284 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1091 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 285 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1092 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 286 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1093 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 287 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1094 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 288 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -3.53062e-013 2.68312e-013 2.40885 3.69481 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1095 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 7 {
entity::LineSegment {
                              UniqueID 1096 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1097 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1098 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.664729 0.00222363 0 
-0.658688 0.387474 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1099 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1098 
                                }
                                osg::Vec4Array {
                                  UniqueID 1099 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1097 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1100 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1101 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1102 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.538207 0.00444835 0 
-0.535734 0.385804 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1103 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1102 
                                }
                                osg::Vec4Array {
                                  UniqueID 1103 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1101 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1104 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1105 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1106 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.535734 0.385804 0 
-0.65891 0.383326 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1107 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1106 
                                }
                                osg::Vec4Array {
                                  UniqueID 1107 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1105 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1108 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1109 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1110 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.551258 -0.00150722 0 
-0.538038 0.335263 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1111 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1110 
                                }
                                osg::Vec4Array {
                                  UniqueID 1111 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1109 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1112 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1113 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1114 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.540408 0.328962 0 
-0.649601 0.328969 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1115 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1114 
                                }
                                osg::Vec4Array {
                                  UniqueID 1115 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1113 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1116 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1117 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1118 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.649601 0.328969 0 
-0.656079 0.00833093 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1119 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1118 
                                }
                                osg::Vec4Array {
                                  UniqueID 1119 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1117 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1120 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1121 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1122 
                                  Binding BIND_PER_VERTEX 
vector 2 {
-0.624838 0.130654 0 
-0.621271 0.201352 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1123 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1122 
                                }
                                osg::Vec4Array {
                                  UniqueID 1123 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1121 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 -2.06823e-013 0 0 
                -2.14006e-026 1.03473e-013 1 0 
                -2.06823e-013 1 -1.03473e-013 0 
                1.43703e-013 -0.69481 7.18939e-014 1 
              }
              
}
          }
MatrixRotation {
            -1 -2.06823e-013 0 0 
            -2.14006e-026 1.03473e-013 1 0 
            -2.06823e-013 1 -1.03473e-013 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            1.43703e-013 -0.69481 7.18939e-014 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 1031 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 1032 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 1033 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 1034 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 1058 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 1059 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 1078 
            }
          }
Center 1.43703e-013 -0.69481 7.18939e-014 
Normal -2.06823e-013 1 -1.03473e-013 
}
        entity::Canvas {
          UniqueID 1124 
          Name "round window" 
Children 1 {
osg::MatrixTransform {
              UniqueID 1125 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 1126 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 1127 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 1128 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1129 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 1130 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 1131 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1132 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1133 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 1134 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1135 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1136 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1137 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 1138 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 289 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1139 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1140 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 290 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    9.15156e-014 -0.442482 4.57849e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1141 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1142 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 291 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1143 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 292 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1144 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 293 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1145 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 294 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1146 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 295 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -2.24844e-013 1.70872e-013 1.92581 3.44248 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1147 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1148 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 296 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1149 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 297 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1150 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 298 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1151 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 3 {
entity::Stroke {
                              UniqueID 1152 
                              Name "Stroke" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1153 
                                  Mode LINES_ADJACENCY 
Count 260 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1154 
                                  Binding BIND_PER_VERTEX 
vector 260 {
0.146744 0.736705 0 
0.150995 0.736634 0 
0.155245 0.736563 0 
0.159495 0.736491 0 
0.159495 0.736491 0 
0.159495 0.736491 0 
0.16587 0.736384 0 
0.16587 0.736384 0 
0.16587 0.736384 0 
0.166839 0.736843 0 
0.168062 0.739152 0 
0.169086 0.73947 0 
0.169086 0.73947 0 
0.169086 0.73947 0 
0.181831 0.739256 0 
0.181831 0.739256 0 
0.181831 0.739256 0 
0.191387 0.739095 0 
0.200943 0.738935 0 
0.2105 0.738774 0 
0.2105 0.738774 0 
0.215807 0.738685 0 
0.221114 0.738596 0 
0.226421 0.738507 0 
0.226421 0.738507 0 
0.227482 0.738489 0 
0.22866 0.738936 0 
0.229605 0.738453 0 
0.229605 0.738453 0 
0.229605 0.738453 0 
0.235927 0.73207 0 
0.235927 0.73207 0 
0.235927 0.73207 0 
0.23593 0.732063 0 
0.2359 0.728938 0 
0.235904 0.728931 0 
0.235904 0.728931 0 
0.236372 0.727987 0 
0.238324 0.726487 0 
0.239066 0.725739 0 
0.239066 0.725739 0 
0.241291 0.723492 0 
0.245935 0.717932 0 
0.248553 0.716159 0 
0.248553 0.716159 0 
0.250305 0.714972 0 
0.253819 0.71473 0 
0.254901 0.712911 0 
0.254901 0.712911 0 
0.25543 0.712023 0 
0.257804 0.701304 0 
0.258003 0.700289 0 
0.258003 0.700289 0 
0.258004 0.700282 0 
0.257982 0.697152 0 
0.257982 0.697145 0 
0.257982 0.697145 0 
0.257982 0.697124 0 
0.257919 0.687732 0 
0.257919 0.687711 0 
0.257919 0.687711 0 
0.257919 0.68769 0 
0.257857 0.678292 0 
0.257857 0.678271 0 
0.257857 0.678271 0 
0.257857 0.678264 0 
0.257836 0.675131 0 
0.257836 0.675124 0 
0.257836 0.675124 0 
0.257836 0.675103 0 
0.257773 0.665699 0 
0.257773 0.665678 0 
0.257773 0.665678 0 
0.257773 0.665671 0 
0.257752 0.662535 0 
0.257752 0.662528 0 
0.257752 0.662528 0 
0.257752 0.662521 0 
0.257732 0.659385 0 
0.257732 0.659378 0 
0.257732 0.659378 0 
0.257731 0.659371 0 
0.257711 0.656234 0 
0.257711 0.656227 0 
0.257711 0.656227 0 
0.25771 0.656206 0 
0.257648 0.646792 0 
0.257648 0.646771 0 
0.257648 0.646771 0 
0.257648 0.64675 0 
0.257585 0.637331 0 
0.257585 0.637311 0 
0.257585 0.637311 0 
0.257585 0.637304 0 
0.257564 0.634163 0 
0.257564 0.634156 0 
0.257564 0.634156 0 
0.257564 0.634135 0 
0.257502 0.62471 0 
0.257502 0.624689 0 
0.257502 0.624689 0 
0.257502 0.624682 0 
0.257481 0.621539 0 
0.257481 0.621532 0 
0.257481 0.621532 0 
0.257481 0.621525 0 
0.257463 0.618381 0 
0.25746 0.618374 0 
0.25746 0.618374 0 
0.256993 0.617471 0 
0.248259 0.606793 0 
0.247794 0.605891 0 
0.247794 0.605891 0 
0.24779 0.605884 0 
0.247775 0.602737 0 
0.247772 0.60273 0 
0.247772 0.60273 0 
0.247772 0.60273 0 
0.241337 0.596509 0 
0.241337 0.596509 0 
0.241337 0.596509 0 
0.240566 0.595763 0 
0.239143 0.593717 0 
0.238119 0.593397 0 
0.238119 0.593397 0 
0.238119 0.593397 0 
0.22853 0.593547 0 
0.22853 0.593547 0 
0.22853 0.593547 0 
0.227562 0.593085 0 
0.226334 0.590755 0 
0.22531 0.590434 0 
0.22531 0.590434 0 
0.223276 0.589797 0 
0.220839 0.591452 0 
0.218916 0.590534 0 
0.218916 0.590534 0 
0.216977 0.589609 0 
0.21428 0.585465 0 
0.212471 0.584306 0 
0.212471 0.584306 0 
0.211574 0.583731 0 
0.210339 0.58434 0 
0.209273 0.584356 0 
0.209273 0.584356 0 
0.205016 0.584423 0 
0.200736 0.58449 0 
0.196479 0.584556 0 
0.196479 0.584556 0 
0.189014 0.584673 0 
0.181548 0.584789 0 
0.174083 0.584906 0 
0.174083 0.584906 0 
0.174083 0.584906 0 
0.164482 0.585056 0 
0.164482 0.585056 0 
0.164482 0.585056 0 
0.163542 0.585538 0 
0.162252 0.587789 0 
0.161311 0.588272 0 
0.161311 0.588272 0 
0.161311 0.588272 0 
0.151709 0.588422 0 
0.151709 0.588422 0 
0.151709 0.588422 0 
0.150711 0.588768 0 
0.149413 0.591044 0 
0.148539 0.591637 0 
0.148539 0.591637 0 
0.146782 0.59283 0 
0.143925 0.593709 0 
0.142168 0.594903 0 
0.142168 0.594903 0 
0.139547 0.596683 0 
0.134546 0.601998 0 
0.132661 0.604546 0 
0.132661 0.604546 0 
0.132661 0.604546 0 
0.123189 0.617346 0 
0.123189 0.617346 0 
0.123189 0.617346 0 
0.123189 0.617346 0 
0.12332 0.629987 0 
0.12332 0.629987 0 
0.12332 0.629987 0 
0.12332 0.629998 0 
0.123356 0.633136 0 
0.123352 0.633146 0 
0.123352 0.633146 0 
0.123029 0.634139 0 
0.120465 0.638498 0 
0.12022 0.639513 0 
0.12022 0.639513 0 
0.12022 0.639513 0 
0.120318 0.648983 0 
0.120318 0.648983 0 
0.120318 0.648983 0 
0.119995 0.649976 0 
0.117761 0.654474 0 
0.117187 0.655346 0 
0.117187 0.655346 0 
0.116608 0.656227 0 
0.114489 0.657606 0 
0.114024 0.658552 0 
0.114024 0.658552 0 
0.114009 0.658582 0 
0.114123 0.667979 0 
0.114124 0.668012 0 
0.114124 0.668012 0 
0.114124 0.668024 0 
0.114157 0.671154 0 
0.114157 0.671165 0 
0.114157 0.671165 0 
0.114157 0.671198 0 
0.114257 0.680586 0 
0.114257 0.680619 0 
0.114257 0.680619 0 
0.114257 0.68063 0 
0.11429 0.683758 0 
0.11429 0.683769 0 
0.11429 0.683769 0 
0.114291 0.683792 0 
0.114357 0.690046 0 
0.114357 0.690068 0 
0.114357 0.690068 0 
0.114357 0.69009 0 
0.114416 0.696344 0 
0.114424 0.696365 0 
0.114424 0.696365 0 
0.114424 0.696365 0 
0.120875 0.702553 0 
0.120875 0.702554 0 
0.120875 0.702554 0 
0.121495 0.703446 0 
0.123513 0.707901 0 
0.124132 0.708793 0 
0.124132 0.708793 0 
0.124132 0.708793 0 
0.130579 0.714977 0 
0.130579 0.714977 0 
0.130579 0.714977 0 
0.132383 0.716124 0 
0.135188 0.716868 0 
0.136992 0.718015 0 
0.136992 0.718015 0 
0.137898 0.718591 0 
0.139438 0.720361 0 
0.140213 0.721105 0 
0.140213 0.721105 0 
0.142536 0.723334 0 
0.147549 0.728142 0 
0.149872 0.730371 0 
0.149872 0.730371 0 
0.150646 0.731114 0 
0.152066 0.73314 0 
0.15309 0.733458 0 
0.15309 0.733458 0 
0.155944 0.734345 0 
0.162477 0.733301 0 
0.165841 0.733245 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1155 
                                  Binding BIND_PER_VERTEX 
vector 260 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1154 
                                }
                                osg::Vec4Array {
                                  UniqueID 1155 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1153 
                                }
                              }
Color 0 0.168627 0.211765 1 
IsCurved TRUE 
}
                            entity::Stroke {
                              UniqueID 1156 
                              Name "Stroke" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1157 
                                  Mode LINES_ADJACENCY 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1158 
                                  Binding BIND_PER_VERTEX 
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1159 
                                  Binding BIND_PER_VERTEX 
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1158 
                                }
                                osg::Vec4Array {
                                  UniqueID 1159 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1157 
                                }
                              }
Color 0 0.168627 0.211765 1 
IsCurved TRUE 
}
                            entity::Stroke {
                              UniqueID 1160 
                              Name "Stroke" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1161 
                                  Mode LINES_ADJACENCY 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1162 
                                  Binding BIND_PER_VERTEX 
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1163 
                                  Binding BIND_PER_VERTEX 
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1162 
                                }
                                osg::Vec4Array {
                                  UniqueID 1163 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1161 
                                }
                              }
Color 0 0.168627 0.211765 1 
IsCurved TRUE 
}
                          }
}
                        osg::Geode {
                          UniqueID 1164 
                        }
                        osg::Geode {
                          UniqueID 1165 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1166 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 1167 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 1168 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1169 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1170 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 1171 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1172 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1173 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 1174 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 299 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1175 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1176 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 300 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    9.15156e-014 -0.442482 4.57849e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1177 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1178 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 301 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1179 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 302 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1180 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 303 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1181 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 304 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1182 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 305 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -2.24844e-013 1.70872e-013 1.92581 3.44248 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1183 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 1184 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1185 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 1186 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1187 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1188 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 1189 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1190 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1191 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 1192 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 306 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1193 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1194 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 307 FloatArray 16 {
                                    -1 -2.06823e-013 0 0 
                                    -2.14006e-026 1.03473e-013 1 0 
                                    -2.06823e-013 1 -1.03473e-013 0 
                                    9.15156e-014 -0.442482 4.57849e-014 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1195 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1196 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 308 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1197 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 309 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1198 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 310 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1199 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 311 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1200 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 312 FloatArray 16 {
                                    2.45689 0 3.95924e-013 2.06823e-013 
                                    5.25789e-026 3.73205 -1.9808e-013 -1.03473e-013 
                                    5.08141e-013 -3.86166e-013 -1.91431 -1 
                                    -2.24844e-013 1.70872e-013 1.92581 3.44248 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1201 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 6 {
entity::LineSegment {
                              UniqueID 1202 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1203 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1204 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.208157 0.12701 0 
0.208748 0.262783 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1205 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1204 
                                }
                                osg::Vec4Array {
                                  UniqueID 1205 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1203 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1206 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1207 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1208 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.208748 0.262783 0 
0.137785 0.263293 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1209 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1208 
                                }
                                osg::Vec4Array {
                                  UniqueID 1209 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1207 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1210 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1211 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1212 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.137785 0.263293 0 
0.140216 0.127285 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1213 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1212 
                                }
                                osg::Vec4Array {
                                  UniqueID 1213 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1211 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1214 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1215 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1216 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.136813 0.127299 0 
0.136813 0.127299 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1217 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1216 
                                }
                                osg::Vec4Array {
                                  UniqueID 1217 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1215 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1218 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1219 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1220 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.214953 0.130394 0 
0.136838 0.130717 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1221 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1220 
                                }
                                osg::Vec4Array {
                                  UniqueID 1221 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1219 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1222 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1223 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1224 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.592996 0.785809 0 
0.047447 0.786375 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1225 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1224 
                                }
                                osg::Vec4Array {
                                  UniqueID 1225 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1223 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1 -2.06823e-013 0 0 
                -2.14006e-026 1.03473e-013 1 0 
                -2.06823e-013 1 -1.03473e-013 0 
                9.15156e-014 -0.442482 4.57849e-014 1 
              }
              
}
          }
MatrixRotation {
            -1 -2.06823e-013 0 0 
            -2.14006e-026 1.03473e-013 1 0 
            -2.06823e-013 1 -1.03473e-013 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            9.15156e-014 -0.442482 4.57849e-014 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 1125 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 1126 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 1127 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 1128 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 1164 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 1165 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 1184 
            }
          }
Center 9.15156e-014 -0.442482 4.57849e-014 
Normal -2.06823e-013 1 -1.03473e-013 
}
        entity::Canvas {
          UniqueID 1226 
          Name "Canvas14" 
Children 1 {
osg::MatrixTransform {
              UniqueID 1227 
              Name "Transform" 
Children 1 {
osg::Switch {
                  UniqueID 1228 
                  Name "Switch" 
Children 1 {
osg::Group {
                      UniqueID 1229 
                      NodeMask 0x10 
Children 4 {
osg::Geode {
                          UniqueID 1230 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1231 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 1232 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 1233 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1234 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1235 
                                  Name "ProgramStroke" 
Shaders 3 {
osg::Shader {
                                      UniqueID 1236 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1237 
                                      Type GEOMETRY 
ShaderSource 260 {
"#version 330" 
"" 
"uniform float Thickness;" 
"uniform vec2 Viewport;" 
"uniform float MiterLimit;" 
"uniform int Segments;" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"" 
"const int SegmentsMax = 24; // max_vertices = (SegmentsMax+1)*4;" 
"const int SegmentsMin = 3; // min number of segments per curve" 
"" 
"layout(lines_adjacency) in;" 
"layout(triangle_strip, max_vertices = 100) out;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex;" 
"} VertexIn[4];" 
"" 
"out VertexData{" 
"    vec2 mTexCoord; // fix before usage" 
"    vec4 mColor;" 
"} VertexOut;" 
"" 
"vec2 toScreenSpace(vec4 vertex)" 
"{" 
"    return vec2( vertex.xy / vertex.w ) * Viewport;" 
"}" 
"" 
"float toZValue(vec4 vertex)" 
"{" 
"    return vertex.z / vertex.w;" 
"}" 
"" 
"vec2 toBezier(float delta, int i, vec2 b0, vec2 b1, vec2 b2, vec2 b3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (b0 * one_minus_t2 * one_minus_t + b1 * 3.0 * t * one_minus_t2 + b2 * 3.0 * t2 * one_minus_t + b3 * t2 * t);" 
"}" 
"" 
"vec4 toBezier3D(float delta, int i, vec4 B0, vec4 B1, vec4 B2, vec4 B3)" 
"{" 
"    float t = delta * float(i);" 
"    float t2 = t * t;" 
"    float one_minus_t = 1.0 - t;" 
"    float one_minus_t2 = one_minus_t * one_minus_t;" 
"    return (B0 * one_minus_t2 * one_minus_t + B1 * 3.0 * t * one_minus_t2 + B2 * 3.0 * t2 * one_minus_t + B3 * t2 * t);" 
"}" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 0;" 
"    if (d<=FogMin) return 1;" 
"" 
"    return (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void drawSegment(vec2 points[4], vec4 colors[4], float zValues[4])" 
"{" 
"    vec2 p0 = points[0];" 
"    vec2 p1 = points[1];" 
"    vec2 p2 = points[2];" 
"    vec2 p3 = points[3];" 
"" 
"    /* perform naive culling */" 
"    vec2 area = Viewport * 4;" 
"    if( p1.x < -area.x || p1.x > area.x ) return;" 
"    if( p1.y < -area.y || p1.y > area.y ) return;" 
"    if( p2.x < -area.x || p2.x > area.x ) return;" 
"    if( p2.y < -area.y || p2.y > area.y ) return;" 
"" 
"    /* determine the direction of each of the 3 segments (previous, current, next) */" 
"    vec2 v0 = normalize( p1 - p0 );" 
"    vec2 v1 = normalize( p2 - p1 );" 
"    vec2 v2 = normalize( p3 - p2 );" 
"" 
"    /* determine the normal of each of the 3 segments (previous, current, next) */" 
"    vec2 n0 = vec2( -v0.y, v0.x );" 
"    vec2 n1 = vec2( -v1.y, v1.x );" 
"    vec2 n2 = vec2( -v2.y, v2.x );" 
"" 
"    /* determine miter lines by averaging the normals of the 2 segments */" 
"    vec2 miter_a = normalize( n0 + n1 );	// miter at start of current segment" 
"    vec2 miter_b = normalize( n1 + n2 ); // miter at end of current segment" 
"" 
"    /* determine the length of the miter by projecting it onto normal and then inverse it */" 
"    float an1 = dot(miter_a, n1);" 
"    float bn1 = dot(miter_b, n2);" 
"    if (an1==0) an1 = 1;" 
"    if (bn1==0) bn1 = 1;" 
"    float length_a = Thickness / an1;" 
"    float length_b = Thickness / bn1;" 
"" 
"    /* prevent excessively long miters at sharp corners */" 
"    if( dot( v0, v1 ) < -MiterLimit ) {" 
"        miter_a = n1;" 
"        length_a = Thickness;" 
"" 
"        /* close the gap */" 
"        if( dot( v0, n1 ) > 0 ) {" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 + Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"        else {" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n1 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 1 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( ( p1 - Thickness * n0 ) / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            VertexOut.mTexCoord = vec2( 0, 0.5 );" 
"            VertexOut.mColor = colors[1];" 
"            gl_Position = vec4( p1 / Viewport, zValues[1], 1.0 );" 
"            EmitVertex();" 
"" 
"            EndPrimitive();" 
"        }" 
"    }" 
"    if( dot( v1, v2 ) < -MiterLimit ) {" 
"        miter_b = n1;" 
"        length_b = Thickness;" 
"    }" 
"    // generate the triangle strip" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 + length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[1];" 
"    gl_Position = vec4( ( p1 - length_a * miter_a ) / Viewport, zValues[1], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 0 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 + length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    VertexOut.mTexCoord = vec2( 0, 1 );" 
"    VertexOut.mColor = colors[2];" 
"    gl_Position = vec4( ( p2 - length_b * miter_b ) / Viewport, zValues[2], 1.0 );" 
"    EmitVertex();" 
"" 
"    EndPrimitive();" 
"}" 
"" 
"void main(void)" 
"{" 
"    /* cut segments number if larger than allowed */" 
"    int nSegments = (Segments > SegmentsMax)? SegmentsMax : Segments;" 
"    nSegments = (nSegments < SegmentsMin)? SegmentsMin: nSegments;" 
"" 
"    /* read the input */" 
"    vec4 B[4], V[4], C[4];" 
"    for (int i=0; i<4; ++i){" 
"        B[i] = gl_in[i].gl_Position; // bezier points" 
"        V[i] = VertexIn[i].mVertex; // vertex format" 
"        C[i] = VertexIn[i].mColor; // attached colors" 
"    }" 
"" 
"    /* adjust alpha channels wrt camera eye distance */" 
"    if (IsFogged){" 
"        for (int i=0; i<4; ++i){" 
"            float d = distance(CameraEye, V[0]);" 
"            float alpha = getFogFactor(d);" 
"            C[i] = vec4(C[i].rgb, alpha);" 
"        }" 
"    }" 
"" 
"    /* get the 2d bezier control points */" 
"    vec2 b0 = toScreenSpace( B[0] );" 
"    vec2 b1 = toScreenSpace( B[1] );" 
"    vec2 b2 = toScreenSpace( B[2] );" 
"    vec2 b3 = toScreenSpace( B[3] );" 
"" 
"    /* use the points to build a bezier line */" 
"    float delta = 1.0 / float(nSegments);" 
"    vec4 P[4]; // interpolated 3D points of Bezier" 
"    vec2 points[4]; // interpolated 2D points of Bezier" 
"    vec4 colors[4]; // interpolated colors" 
"    float zValues[4]; // stroke z-values" 
"    int j = 0; // bezier segment index for color interpolation" 
"    const float ext = 0.00001;" 
"    for (int i=0; i<=nSegments; ++i){" 
"        /* first point */" 
"        if (i==0){" 
"            P[1] = toBezier3D(delta, i, B[0], B[1], B[2], B[3]);" 
"            P[2] = toBezier3D(delta, i+1, B[0], B[1], B[2], B[3]);" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"            vec4 D = normalize(P[1] - P[2]);" 
"            P[0] = P[1] + D * ext;" 
"        }" 
"        else if (i < nSegments-1){" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            P[3] = toBezier3D(delta, i+2, B[0], B[1], B[2], B[3]);" 
"        }" 
"        /* last point */" 
"        else {" 
"            P[0] = P[1];" 
"            P[1] = P[2];" 
"            P[2] = P[3];" 
"            vec4 D = normalize(P[2] - P[1]);" 
"            P[3] = P[2] + D * ext;" 
"        }" 
"" 
"        // color interpolation" 
"        {" 
"            if (i==0) colors[1] = C[0];" 
"            else colors[1] = colors[2];" 
"" 
"            /* fraction p{i} is located between fraction p{j} and p{j+1} */" 
"            float pi = float(i+1) / float(nSegments);" 
"            if (pi >= float(j+1)/3.f) j++;" 
"            float pj = float(j)/3.f; // 4 bezier points means 3 segments between which points are plotted" 
"            float pj1 = float(j+1)/3.f;" 
"            float a = (pi-pj) / (pj1-pj);" 
"            colors[2] = mix(C[j], C[j+1], a); // j <= 3" 
"        }" 
"" 
"        /* stroke z-values */" 
"        points[0] = toScreenSpace(P[0]);" 
"        points[1] = toScreenSpace(P[1]);" 
"        points[2] = toScreenSpace(P[2]);" 
"        points[3] = toScreenSpace(P[3]);" 
"" 
"        zValues[0] = toZValue(P[0]);" 
"        zValues[1] = toZValue(P[1]);" 
"        zValues[2] = toZValue(P[2]);" 
"        zValues[3] = toZValue(P[3]);" 
"" 
"        drawSegment(points, colors, zValues);" 
"    }" 
"" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1238 
                                      Type FRAGMENT 
ShaderSource 11 {
"#version 330" 
"" 
"in VertexData{" 
"    vec2 mTexCoord;" 
"    vec4 mColor;" 
"} VertexIn;" 
"" 
"void main(void)" 
"{" 
"    gl_FragColor = VertexIn.mColor;" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1239 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 10 {
osg::Uniform {
                                  UniqueID 1240 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 313 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1241 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1242 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 314 FloatArray 16 {
                                    -1.03473e-013 -1 -1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    -1 1.03473e-013 1.07066e-026 0 
                                    -0.0621276 6.42852e-015 6.65176e-028 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1243 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1244 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 315 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1245 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 316 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1246 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 317 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1247 
                                  Name "MiterLimit" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 318 FloatArray 1 {
                                    0.75 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1248 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 319 FloatArray 16 {
                                    2.54222e-013 -3.86166e-013 1.91431 1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    0.152641 2.48247e-027 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1249 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1250 
                                  Name "Segments" 
Type INT 
NumElements 1 
Elements TRUE ArrayID 320 IntArray 1 {
                                    11 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1251 
                                  Name "Thickness" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 321 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1252 
                                  Name "Viewport" 
Type FLOAT_VEC2 
NumElements 1 
Elements TRUE ArrayID 322 FloatArray 2 {
                                    2836 1867 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1253 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 1254 
                        }
                        osg::Geode {
                          UniqueID 1255 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1256 
                              ModeList 4 {
GL_POINT_SMOOTH ON 
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 4 {
osg::Point {
                                  UniqueID 1257 
                                  Size 4 
FadeThresholdSize 1 
DistanceAttenuation 1 0 0 
MaxSize 100 
}
                                Value OFF 
osg::LineWidth {
                                  UniqueID 1258 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1259 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1260 
                                  Name "ProgramPolygon" 
Shaders 2 {
osg::Shader {
                                      UniqueID 1261 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1262 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1263 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 1264 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 323 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1265 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1266 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 324 FloatArray 16 {
                                    -1.03473e-013 -1 -1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    -1 1.03473e-013 1.07066e-026 0 
                                    -0.0621276 6.42852e-015 6.65176e-028 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1267 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1268 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 325 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1269 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 326 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1270 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 327 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1271 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 328 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1272 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 329 FloatArray 16 {
                                    2.54222e-013 -3.86166e-013 1.91431 1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    0.152641 2.48247e-027 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1273 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
}
                        osg::Geode {
                          UniqueID 1274 
                          StateSet TRUE {
osg::StateSet {
                              UniqueID 1275 
                              ModeList 3 {
2848 ON 
GL_LIGHTING OFF 
GL_BLEND ON 
}
AttributeList 3 {
osg::LineWidth {
                                  UniqueID 1276 
                                  Width 4 
}
                                Value OFF 
osg::BlendFunc {
                                  UniqueID 1277 
                                  SourceRGB SRC_ALPHA 
SourceAlpha SRC_ALPHA 
DestinationRGB ONE_MINUS_SRC_ALPHA 
DestinationAlpha ONE_MINUS_SRC_ALPHA 
}
                                Value OFF 
osg::Program {
                                  UniqueID 1278 
                                  Name "ProgramLineSegment" 
Shaders 2 {
osg::Shader {
                                      UniqueID 1279 
                                      Type VERTEX 
ShaderSource 19 {
"#version 330" 
"" 
"uniform mat4 ModelViewProjectionMatrix;" 
"uniform mat4 CanvasMatrix;" 
"" 
"layout(location = 0) in vec4 Vertex;" 
"layout(location = 1) in vec4 Color;" 
"" 
"out VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexOut;" 
"" 
"void main(void)" 
"{" 
"    VertexOut.mColor = Color;" 
"    VertexOut.mVertex = CanvasMatrix * Vertex;" 
"    gl_Position = ModelViewProjectionMatrix * Vertex;" 
"}" 
}
}
                                    osg::Shader {
                                      UniqueID 1280 
                                      Type FRAGMENT 
ShaderSource 33 {
"#version 330" 
"" 
"uniform bool IsFogged;" 
"uniform float FogMin;" 
"uniform float FogMax;" 
"uniform vec4 CameraEye;" 
"uniform vec4 FogColor;" 
"" 
"in VertexData{" 
"    vec4 mColor;" 
"    vec4 mVertex; // to calculate distance to camera eye" 
"} VertexIn;" 
"" 
"float getFogFactor(float d)" 
"{" 
"    if (d>=FogMax) return 1;" 
"    if (d<=FogMin) return 0;" 
"" 
"    return 1 - (FogMax - d) / (FogMax - FogMin);" 
"}" 
"" 
"void main(void)" 
"{" 
"    vec4 color = VertexIn.mColor;" 
"    if (IsFogged){" 
"        float d = distance(CameraEye, VertexIn.mVertex);" 
"        float alpha = getFogFactor(d);" 
"        color = mix(color, FogColor, alpha);" 
"    }" 
"" 
"    gl_FragColor = color;" 
"            //vec4(VertexIn.mColor.rgb, alpha);" 
"}" 
}
}
                                  }
GeometryVerticesOut GL_GEOMETRY_VERTICES_OUT_EXT 1 
GeometryInputType GL_GEOMETRY_INPUT_TYPE_EXT 4 
GeometryOutputType GL_GEOMETRY_OUTPUT_TYPE_EXT 5 
FeedBackVaryingsName 0 {
}
FeedBackMode 35981 
}
                                Value OVERRIDE 
}
TextureModeList 1 {
Data 1 {
GL_TEXTURE_2D OFF 
}
}
TextureAttributeList 1 {
Data 1 {
osg::Texture2D {
                                    UniqueID 1281 
                                    WRAP_S CLAMP 
WRAP_T CLAMP 
WRAP_R CLAMP 
MIN_FILTER LINEAR_MIPMAP_LINEAR 
MAG_FILTER LINEAR 
Swizzle RGBA 
}
                                  Value OFF 
}
}
UniformList 7 {
osg::Uniform {
                                  UniqueID 1282 
                                  Name "CameraEye" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 330 FloatArray 4 {
                                    0 3 0 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1283 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1284 
                                  Name "CanvasMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 331 FloatArray 16 {
                                    -1.03473e-013 -1 -1.03473e-013 0 
                                    0 -1.03473e-013 1 0 
                                    -1 1.03473e-013 1.07066e-026 0 
                                    -0.0621276 6.42852e-015 6.65176e-028 1 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1285 
                                    }
                                  }
}
                                Value OFF 
osg::Uniform {
                                  UniqueID 1286 
                                  Name "FogColor" 
Type FLOAT_VEC4 
NumElements 1 
Elements TRUE ArrayID 332 FloatArray 4 {
                                    0.992157 0.964706 0.890196 1 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1287 
                                  Name "FogMax" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 333 FloatArray 1 {
                                    30 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1288 
                                  Name "FogMin" 
Type FLOAT 
NumElements 1 
Elements TRUE ArrayID 334 FloatArray 1 {
                                    4 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1289 
                                  Name "IsFogged" 
Type BOOL 
NumElements 1 
Elements TRUE ArrayID 335 IntArray 1 {
                                    0 
                                  }
                                }
                                Value OFF 
osg::Uniform {
                                  UniqueID 1290 
                                  Name "ModelViewProjectionMatrix" 
Type FLOAT_MAT4 
NumElements 1 
Elements TRUE ArrayID 336 FloatArray 16 {
                                    2.54222e-013 -3.86166e-013 1.91431 1 
                                    0 3.73205 1.9808e-013 1.03473e-013 
                                    2.45689 3.99576e-026 -1.9808e-013 -1.03473e-013 
                                    0.152641 2.48247e-027 1.07876 3 
                                  }
                                  UpdateCallback TRUE {
osg::UniformCallback {
                                      UniqueID 1291 
                                    }
                                  }
}
                                Value OFF 
}
}
                          }
Drawables 2 {
entity::LineSegment {
                              UniqueID 1292 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1293 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1294 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.447135 0.00536096 0 
0.443837 0.788501 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1295 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1294 
                                }
                                osg::Vec4Array {
                                  UniqueID 1295 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1293 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                            entity::LineSegment {
                              UniqueID 1296 
                              Name "LineSegment" 
DataVariance DYNAMIC 
PrimitiveSetList 1 {
osg::DrawArrays {
                                  UniqueID 1297 
                                  Mode LINES 
Count 2 
}
                              }
VertexArray TRUE {
osg::Vec3Array {
                                  UniqueID 1298 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0.443837 0.788501 0 
0.750623 0.780688 0 
}
}
                              }
ColorArray TRUE {
osg::Vec4Array {
                                  UniqueID 1299 
                                  Binding BIND_PER_VERTEX 
vector 2 {
0 0.168627 0.211765 1 
0 0.168627 0.211765 1 
}
}
                              }
VertexAttribArrayList 2 {
osg::Vec3Array {
                                  UniqueID 1298 
                                }
                                osg::Vec4Array {
                                  UniqueID 1299 
                                }
                              }
Lines TRUE {
osg::DrawArrays {
                                  UniqueID 1297 
                                }
                              }
Color 0 0.168627 0.211765 1 
}
                          }
}
                      }
}
                  }
ValueList 1 {
TRUE 
}
}
              }
Matrix {
                -1.03473e-013 -1 -1.03473e-013 0 
                0 -1.03473e-013 1 0 
                -1 1.03473e-013 1.07066e-026 0 
                -0.0621276 6.42852e-015 6.65176e-028 1 
              }
              
}
          }
MatrixRotation {
            -1.03473e-013 -1 -1.03473e-013 0 
            0 -1.03473e-013 1 0 
            -1 1.03473e-013 1.07066e-026 0 
            0 0 0 1 
          }
          
MatrixTranslation {
            1 0 0 0 
            0 1 0 0 
            0 0 1 0 
            -0.0621276 6.42852e-015 6.65176e-028 1 
          }
          
Transform TRUE {
osg::MatrixTransform {
              UniqueID 1227 
            }
          }
Switch TRUE {
osg::Switch {
              UniqueID 1228 
            }
          }
GroupData TRUE {
osg::Group {
              UniqueID 1229 
            }
          }
GeodeStrokes TRUE {
osg::Geode {
              UniqueID 1230 
            }
          }
GeodePhotos TRUE {
osg::Geode {
              UniqueID 1254 
            }
          }
GeodePolygons TRUE {
osg::Geode {
              UniqueID 1255 
            }
          }
GeodeLineSegments TRUE {
osg::Geode {
              UniqueID 1274 
            }
          }
Center -0.0621276 6.42852e-015 6.65176e-028 
Normal -1 1.03473e-013 1.07066e-026 
}
      }
}
  }
GroupCanvases TRUE {
osg::Group {
      UniqueID 3 
    }
  }
Bookmarks TRUE {
entity::Bookmarks {
      UniqueID 2 
    }
  }
IdCanvas 15 
FilePath "C:/Users/vr267/Dropbox/cherish/samples/House1.osgt" 
}
